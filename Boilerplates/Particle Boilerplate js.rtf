{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww37160\viewh19680\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //PARTICLE BOILERPLATE .js\
\
const canvas = document.getElementById('canvas1');\
const ctx = canvas.getContext('2d');\
canvas.width = window.innerWidth;\
canvas.height = window.innerHeight;\
let particleArray = [];\
\
// handle mouse\
const mouse = \{\
   x: null,\
   y: null,\
   radius: 150\
\}\
\
window.addEventListener('mousemove', function(event)\{\
   mouse.x = event.x;\
   mouse.y = event.y;\
   //console.log(mouse.x, mouse.y);\
\}); \
\
ctx.fillStyle = 'green';\
ctx.font = '30px Verdana';\
ctx.fillText('A', 0, 30);\
const data = ctx.getImageData(0, 0, 100, 100);\
\
class Particle \{\
   constructor(x, y) \{\
      this.x = x;\
      this.y = y;\
      this.size = 3;\
      this.baseX = this.x;\
      this.baseY = this.y;\
      this.density = (Math.random() * 30) + 1;\
   \}\
   draw() \{\
      ctx.fillStyle = 'green';\
      ctx.beginPath();\
      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\
      ctx.closePath();\
      ctx.fill();\
   \}\
   update() \{\
      let dx = mouse.x - this.x;\
      let dy = mouse.y - this.y;\
      let distance = Math.sqrt(dx * dx + dy * dy);\
      if (distance < 100) \{\
         this.size = 30;\
      \} else \{\
         this.size = 3;\
      \}\
   \}\
\} \
\
function init() \{\
   particleArray = [];\
   for (let i = 0; i < 1000; i++) \{\
      let x = Math.random() * canvas.width;\
      let y = Math.random() * canvas.height;\
      particleArray.push(new Particle(x, y));\
   \}\
   //particleArray.push(new Particle(200, 200));\
   //particleArray.push(new Particle(300, 300));\
\}\
init ();\
console.log(particleArray);\
\
function animate() \{\
   ctx.clearRect(0, 0, canvas.width, canvas.height);\
   for (let i = 0; i < particleArray.length; i++) \{\
      particleArray[i].draw();\
      particleArray[i].update();\
   \}\
   requestAnimationFrame(animate);\
\}\
animate();\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}